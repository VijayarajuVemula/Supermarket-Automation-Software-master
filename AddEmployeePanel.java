/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sas;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.GregorianCalendar;
import javax.swing.JComboBox;
import SupermarketData.*;
import javax.swing.JOptionPane;

public class AddEmployeePanel extends javax.swing.JPanel {
    private int dd, mm, yy;
    private Client cl;
    
    public AddEmployeePanel(Client ncl) {
        initComponents();
        cl = ncl;
        
        final String months[] = {"Months:","January","February","March","April","May","June","July","August","September","October","November","December"};
        String days[]= new String[32];
        days[0] = "Day:";
        for(int i=1;i<=31;i++){
            days[i] = i+"";
        }
        final String year[] = new String[120];
        year[0]="Year:";
        int presentyear = new GregorianCalendar().get(GregorianCalendar.YEAR);
        for(int i=1;i<120;i++){
            year[i] = presentyear+"";
            presentyear--;
        }
        
        monthCombo.setModel(new JComboBox(months).getModel());
        dayCombo.setModel(new JComboBox(days).getModel());
        yearCombo.setModel(new JComboBox(year).getModel());
        monthCombo.addItemListener(new ItemListener(){
            public void itemStateChanged(ItemEvent evt){
                mm = monthCombo.getSelectedIndex();
                String monthSelected = months[mm];
                if(monthSelected.equals(months[4]) || monthSelected.equals(months[6]) || monthSelected.equals(months[9]) || monthSelected.equals(months[11])){
                    String days[] = new String[31];
                    days[0] = "Day:";
                    for(int i=1;i<31;i++){
                        days[i] = i+"";
                    }
                    dayCombo.setModel(new JComboBox(days).getModel());
                }
                else if(monthSelected.equals(months[2])){
                    String days[] = new String[29];
                    days[0] = "Day:";
                    for(int i=1;i<29;i++){
                        days[i]=i+"";
                    }
                    dayCombo.setModel(new JComboBox(days).getModel());
                }
                else{
                    String days[] = new String[32];
                    days[0] = "Day:";
                    for(int i=1;i<32;i++){
                        days[i]=i+"";
                    }
                    dayCombo.setModel(new JComboBox(days).getModel());
                }
            }
        });
         dayCombo.addItemListener(new ItemListener(){
            public void itemStateChanged(ItemEvent evt){
                dd = dayCombo.getSelectedIndex();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FNameField = new javax.swing.JTextField();
        LNameField = new javax.swing.JTextField();
        SexCombo = new javax.swing.JComboBox();
        monthCombo = new javax.swing.JComboBox();
        dayCombo = new javax.swing.JComboBox();
        yearCombo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressArea = new javax.swing.JTextArea();
        MobileField = new javax.swing.JFormattedTextField();
        EmailField = new javax.swing.JTextField();
        SalaryField = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        DoneButton = new javax.swing.JButton();
        ErrorMessage = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        PostCombo = new javax.swing.JComboBox();
        ACNumberField = new javax.swing.JTextField();

        jLabel1.setText("First Name:");

        jLabel2.setText("Last Name:");

        jLabel3.setText("Sex:");

        jLabel4.setText("Date of Birth:");

        jLabel5.setText("Address");

        jLabel6.setText("Mobile:");

        jLabel7.setText("Email:");

        jLabel8.setText("Salary:");

        jLabel9.setText("Bank Account Number:");

        SexCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dayCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        yearCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        AddressArea.setColumns(20);
        AddressArea.setLineWrap(true);
        AddressArea.setRows(5);
        jScrollPane1.setViewportView(AddressArea);

        MobileField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##########"))));

        SalaryField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel10.setText("Rs.");

        DoneButton.setText("Done");
        DoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoneButtonActionPerformed(evt);
            }
        });

        ErrorMessage.setForeground(new java.awt.Color(255, 0, 0));

        jLabel11.setText("Post:");

        PostCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sales Clerk", "Supermarket Staff" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ErrorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                        .addGap(502, 502, 502))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SexCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(LNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DoneButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SalaryField)
                                    .addComponent(EmailField)
                                    .addComponent(MobileField)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                                    .addComponent(PostCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ACNumberField))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(PostCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SexCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalaryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(DoneButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(ErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoneButtonActionPerformed
        ErrorMessage.setText("");
        String fName,lName,address,emailAddress,acnumber,phone;
        int month,day,year;
        float salary;
        if((fName = FNameField.getText()).equals(""))
        {
            ErrorMessage.setText("First name not specified.");
        }
        else if((lName = LNameField.getText()).equals(""))
        {
            ErrorMessage.setText("Last name not specified.");
        }
        else if((month = monthCombo.getSelectedIndex())==0)
        {
            ErrorMessage.setText("Birth month not specified.");
        }
        else if((day = dayCombo.getSelectedIndex())==0)
        {
            ErrorMessage.setText("Birth month date not specified.");
            
        }
        else if(yearCombo.getSelectedIndex()==0)
        {
            ErrorMessage.setText("Birth year not specified.");
        }    
        else if((address = AddressArea.getText()).equals(""))
        {
            
            ErrorMessage.setText("Address not specified.");
        } 
        else if((emailAddress = EmailField.getText()).equals(""))
        {
            ErrorMessage.setText("Email address not specified.");
        }
        else if(!isValidEmail(EmailField.getText()))
        {   
            ErrorMessage.setText("Given email address is not valid.");
        }
        else if((acnumber=ACNumberField.getText()).equals("")){
            ErrorMessage.setText("Bank Acount Number needs to be provided.");
        }
        else
        {
            year = Integer.parseInt((String)yearCombo.getSelectedItem());
            char sex;
            salary = Float.parseFloat(SalaryField.getText());
            phone = MobileField.getText();
            
            String[] ID;
            
            if(SexCombo.getSelectedIndex()==0)
            {
                sex='m';
            }
            else 
            {
                sex='f';
            }
            
            if(PostCombo.getSelectedIndex()==0)
            {
                SalesClerk newEmp;
                newEmp = new SalesClerk(fName,lName,sex,month+"/"+day+"/"+year);
                newEmp.SetAddress(address);
                newEmp.SetBankACNumber(acnumber);
                newEmp.SetTelephoneNumber(phone);
                newEmp.SetSalary(salary);
                newEmp.SeteMailID(emailAddress);
                
                ID = EmployeeDatabase.addEmployee(newEmp, cl);
                
                if(ID[0].startsWith("E001"))
                {
                    ErrorMessage.setText("Error connecting to database...please try again");    
                }
                else if(ID[0].startsWith("E002"))
                {
                    
                    ErrorMessage.setText("This email already exists in the database.");
                }
                else{
                    JOptionPane.showMessageDialog(null,"New Employee successfully added to the database\nUsername: "+ID[0]+"\npassword: "+ID[1], "Employee Added", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else
            {
                SupermarketStaff newEmp;
                newEmp = new SupermarketStaff(fName,lName,sex,month+"/"+day+"/"+year);
                newEmp.SetAddress(address);
                newEmp.SetBankACNumber(acnumber);
                newEmp.SetTelephoneNumber(phone);
                newEmp.SetSalary(salary);
                newEmp.SeteMailID(emailAddress);
                
                ID = EmployeeDatabase.addEmployee(newEmp, cl);
                
                if(ID[0].startsWith("E001"))
                {
                    ErrorMessage.setText("Error connecting to database...please try again");    
                }
                else if(ID[0].startsWith("E002"))
                {
                    
                    ErrorMessage.setText("This email already exists in the database.");
                }
                else{
                    JOptionPane.showMessageDialog(null,"New Employee successfully added to the database\nUsername: "+ID[0]+"\nPassword: "+ID[1], "Employee Added", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            FNameField.setText("");
            LNameField.setText("");
            AddressArea.setText("");
            yearCombo.setSelectedIndex(0);
            monthCombo.setSelectedItem(0);
            dayCombo.setSelectedIndex(0);
            MobileField.setText("");
            EmailField.setText("");
            ACNumberField.setText("");
            SalaryField.setText("");
            
        }
    }//GEN-LAST:event_DoneButtonActionPerformed
    
    public boolean isValidEmail(String emailAddr){
        if(emailAddr.isEmpty())
        {
            return false;
        }
        char[] invalidChar={'/',',',';',':'};
        for(int i=0;i<invalidChar.length;i++){
            if(emailAddr.indexOf(invalidChar[i])>=0){
                return false;
            }
        }
        int posofat = emailAddr.indexOf('@');
        if(posofat<0){
            return false;
        }
        if(emailAddr.indexOf('@', posofat)<0){
            return false;
        }
        int periodpos = emailAddr.lastIndexOf('.');
        if(periodpos<0 || periodpos<posofat){
            return false;
        }
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ACNumberField;
    private javax.swing.JTextArea AddressArea;
    private javax.swing.JButton DoneButton;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel ErrorMessage;
    private javax.swing.JTextField FNameField;
    private javax.swing.JTextField LNameField;
    private javax.swing.JFormattedTextField MobileField;
    private javax.swing.JComboBox PostCombo;
    private javax.swing.JFormattedTextField SalaryField;
    private javax.swing.JComboBox SexCombo;
    private javax.swing.JComboBox dayCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox monthCombo;
    private javax.swing.JComboBox yearCombo;
    // End of variables declaration//GEN-END:variables
}
